{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fswiss\fcharset0 ArialMT;\f1\fnil\fcharset0 Consolas;\f2\fnil\fcharset0 Consolas-Bold;
\f3\fnil\fcharset0 Consolas-Italic;\f4\fnil\fcharset0 Consolas-BoldItalic;}
{\colortbl;\red255\green255\blue255;\red14\green14\blue14;\red255\green255\blue255;\red234\green234\blue234;
\red28\green76\blue144;\red178\green0\blue170;\red0\green0\blue135;\red82\green0\blue83;\red83\green83\blue83;
\red133\green35\blue39;\red87\green197\blue83;\red251\green0\blue7;\red109\green109\blue109;\red14\green104\blue3;
\red101\green0\blue97;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid1\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid101\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid201\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid301\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid401\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid501\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid601\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid7}
{\list\listtemplateid8\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid701\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid8}
{\list\listtemplateid9\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid801\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid9}
{\list\listtemplateid10\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid901\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid10}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}{\listoverride\listid8\listoverridecount0\ls8}{\listoverride\listid9\listoverridecount0\ls9}{\listoverride\listid10\listoverridecount0\ls10}}
\paperw11900\paperh16840\margl1440\margr1440\vieww26220\viewh18900\viewkind0
\deftab720
\pard\pardeftab720\sl360\sa180

\f0\b\fs30 \cf2 \cb3 Default Config Files and Nginx Port\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420
\ls1\ilvl0
\fs28 \cf2 {\listtext	\uc0\u9642 	}/usr/local/nginx/conf/
\b0  - The nginx server configuration directory and /usr/local/nginx/conf/nginx.conf is main configuration file.\
\ls1\ilvl0
\b {\listtext	\uc0\u9642 	}/usr/local/nginx/html/
\b0  - The default document location.\
\ls1\ilvl0
\b {\listtext	\uc0\u9642 	}/usr/local/nginx/logs/
\b0  - The default log file location.\
{\listtext	\uc0\u9642 	}Nginx 
\b HTTP default port
\b0  : TCP 80\
{\listtext	\uc0\u9642 	}Nginx 
\b HTTPS default port
\b0  : TCP 443\
\pard\pardeftab720\sl420\sa440
\cf2 You can test nginx configuration changes as follows:
\f1\fs24 \cb4 \
\pard\pardeftab720\sl360
\cf2 # /usr/local/nginx/sbin/nginx -t\
\pard\pardeftab720\sl420\sa440

\f0\fs28 \cf2 \cb3 \uc0\u8232 Sample outputs:\
\pard\pardeftab720\sl300

\f1\fs20 \cf2 \cb4 the configuration file /usr/local/nginx/conf/nginx.conf syntax is ok\
configuration file /usr/local/nginx/conf/nginx.conf test is successful\
\pard\pardeftab720\sl420\sa440

\f0\fs28 \cf2 \cb3 To load config changes, type:
\f1\fs24 \cb4 \
\pard\pardeftab720\sl360
\cf2 # /usr/local/nginx/sbin/nginx -s reload\
\pard\pardeftab720\sl420\sa440

\f0\fs28 \cf2 \cb3 \uc0\u8232 To stop server, type:
\f1\fs24 \cb4 \
\pard\pardeftab720\sl360
\cf2 # /usr/local/nginx/sbin/nginx -s stop\
\pard\pardeftab720\sl360\sa180

\f0\b\fs30 \cf2 \cb3 #1: Turn On SELinux\
\pard\pardeftab720\sl420\sa440

\b0\fs28 \cf2 Security-Enhanced Linux (SELinux) is a Linux kernel feature that provides a mechanism for supporting access control security policies which provides great protection. It can stop many attacks before your system rooted. See how to turn on {\field{\*\fldinst{HYPERLINK "http://www.cyberciti.biz/faq/rhel-fedora-redhat-selinux-protection/"}}{\fldrslt \cf5 \ul \ulc5 SELinux for CentOS / RHEL}} based systems.\
\pard\pardeftab720\sl360\sa180

\fs30 \cf2 Do Boolean Lockdown\
\pard\pardeftab720\sl420\sa440

\fs28 \cf2 Run the getsebool -a command and lockdown system:\
\pard\pardeftab720\sl300

\f1\fs20 \cf2 \cb4 getsebool -a | 
\f2\b \cf6 less
\f1\b0 \cf2 \
getsebool -a | 
\f2\b \cf6 grep
\f1\b0 \cf2  off\
getsebool -a | 
\f2\b \cf6 grep
\f1\b0 \cf2  o\
\pard\pardeftab720\sl420\sa440

\f0\fs28 \cf2 \cb3 To secure the machine, look at settings which are set to 'on' and change to 'off' if they do not apply to your setup with the help of setsebool command. Set correct SE Linux booleans to maintain functionality and protection. Please note that SELinux adds 2-8% overheads to typical RHEL or CentOS installation.\
\pard\pardeftab720\sl360\sa180

\b\fs30 \cf2 #2: Allow Minimal Privileges Via Mount Options\
\pard\pardeftab720\sl420\sa440

\b0\fs28 \cf2 Server all your webpages / html / php files via separate partitions. For example, create a partition called /dev/sda5 and mount at the /nginx. Make sure /nginx is mounted with {\field{\*\fldinst{HYPERLINK "http://www.cyberciti.biz/tips/linux-unix-bsd-nginx-webserver-security.html"}}{\fldrslt \cf5 \ul \ulc5 noexec, nodev and nosetuid}} permissions. Here is my /etc/fstab entry for mounting /nginx:\
\pard\pardeftab720\sl300

\f1\fs20 \cf2 \cb4 LABEL=/nginx     /nginx          ext3   defaults,nosuid,noexec,nodev 1 2\
\pard\pardeftab720\sl420\sa440

\f0\fs28 \cf2 \cb3 Note you need to create a new partition using {\field{\*\fldinst{HYPERLINK "http://www.cyberciti.biz/faq/redhat-centos-linux-ext3-filesystem-format-command/"}}{\fldrslt \cf5 \ul \ulc5 fdisk and mkfs.ext3}} commands.\
\pard\pardeftab720\sl360\sa180

\b\fs30 \cf2 #3: Linux /etc/sysctl.conf Hardening\
\pard\pardeftab720\sl420\sa440

\b0\fs28 \cf2 You can control and configure Linux kernel and networking settings via {\field{\*\fldinst{HYPERLINK "http://www.cyberciti.biz/faq/linux-kernel-etcsysctl-conf-security-hardening/"}}{\fldrslt \cf5 \ul \ulc5 /etc/sysctl.conf}}.\
\pard\pardeftab720\sl300

\f1\fs20 \cf2 \cb4 \'a0\
# Avoid a smurf attack\
net.ipv4.\cf7 icmp_echo_ignore_broadcasts \cf2 =\cf8  1\cf2 \
\'a0\
# Turn on protection for bad icmp error messages\
net.ipv4.\cf7 icmp_ignore_bogus_error_responses \cf2 =\cf8  1\cf2 \
\'a0\
# Turn on syncookies for SYN flood attack protection\
net.ipv4.\cf7 tcp_syncookies \cf2 =\cf8  1\cf2 \
\'a0\
# Turn on and log spoofed, source routed, and redirect packets\
net.ipv4.conf.all.\cf7 log_martians \cf2 =\cf8  1\cf2 \
net.ipv4.conf.default.\cf7 log_martians \cf2 =\cf8  1\cf2 \
\'a0\
# No source routed packets here\
net.ipv4.conf.all.\cf7 accept_source_route \cf2 =\cf8  0\cf2 \
net.ipv4.conf.default.\cf7 accept_source_route \cf2 =\cf8  0\cf2 \
\'a0\
# Turn on reverse path filtering\
net.ipv4.conf.all.\cf7 rp_filter \cf2 =\cf8  1\cf2 \
net.ipv4.conf.default.\cf7 rp_filter \cf2 =\cf8  1\cf2 \
\'a0\
# Make sure no one can alter the routing tables\
net.ipv4.conf.all.\cf7 accept_redirects \cf2 =\cf8  0\cf2 \
net.ipv4.conf.default.\cf7 accept_redirects \cf2 =\cf8  0\cf2 \
net.ipv4.conf.all.\cf7 secure_redirects \cf2 =\cf8  0\cf2 \
net.ipv4.conf.default.\cf7 secure_redirects \cf2 =\cf8  0\cf2 \
\'a0\
# Don't act as a router\
net.ipv4.\cf7 ip_forward \cf2 =\cf8  0\cf2 \
net.ipv4.conf.all.\cf7 send_redirects \cf2 =\cf8  0\cf2 \
net.ipv4.conf.default.\cf7 send_redirects \cf2 =\cf8  0\cf2 \
\'a0\
\'a0\
# Turn on execshild\
kernel.exec-\cf7 shield \cf2 =\cf8  1\cf2 \
kernel.\cf7 randomize_va_space \cf2 =\cf8  1\cf2 \
\'a0\
# Tuen IPv6\
net.ipv6.conf.default.\cf7 router_solicitations \cf2 =\cf8  0\cf2 \
net.ipv6.conf.default.\cf7 accept_ra_rtr_pref \cf2 =\cf8  0\cf2 \
net.ipv6.conf.default.\cf7 accept_ra_pinfo \cf2 =\cf8  0\cf2 \
net.ipv6.conf.default.\cf7 accept_ra_defrtr \cf2 =\cf8  0\cf2 \
net.ipv6.conf.default.\cf7 autoconf \cf2 =\cf8  0\cf2 \
net.ipv6.conf.default.\cf7 dad_transmits \cf2 =\cf8  0\cf2 \
net.ipv6.conf.default.\cf7 max_addresses \cf2 =\cf8  1\cf2 \
\'a0\
# Optimization for port usefor LBs\
# Increase system file descriptor limit\
fs.file-\cf7 max \cf2 =\cf8  65535\cf2 \
\'a0\
# Allow for more PIDs (to reduce rollover problems)
\f3\i \cf9 ; may break some programs 32768
\f1\i0 \cf2 \
kernel.\cf7 pid_max \cf2 =\cf8  65536\cf2 \
\'a0\
# Increase system IP port limits\
net.ipv4.\cf7 ip_local_port_range \cf2 =\cf8  2000 65000\cf2 \
\'a0\
# Increase TCP max buffer size setable using setsockopt()\
net.ipv4.\cf7 tcp_rmem \cf2 =\cf8  4096 87380 8388608\cf2 \
net.ipv4.\cf7 tcp_wmem \cf2 =\cf8  4096 87380 8388608\cf2 \
\'a0\
# Increase Linux auto tuning TCP buffer limits\
# min, default, and max number of bytes to use\
# set max to at least 4MB, or higher if you use very high BDP paths\
# Tcp Windows etc\
net.core.\cf7 rmem_max \cf2 =\cf8  8388608\cf2 \
net.core.\cf7 wmem_max \cf2 =\cf8  8388608\cf2 \
net.core.\cf7 netdev_max_backlog \cf2 =\cf8  5000\cf2 \
net.ipv4.\cf7 tcp_window_scaling \cf2 =\cf8  1\cf2 \
\'a0\
\pard\pardeftab720\sl420\sa440

\f0\fs28 \cf2 \cb3 See also:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420
\ls2\ilvl0\cf5 {\listtext	\uc0\u9642 	}{\field{\*\fldinst{HYPERLINK "http://www.cyberciti.biz/faq/linux-kernel-tuning-virtual-memory-subsystem/"}}{\fldrslt \ul Linux Tuning The VM}}\cf2  (memory) Subsystem\
\ls2\ilvl0\cf5 {\listtext	\uc0\u9642 	}{\field{\*\fldinst{HYPERLINK "http://www.cyberciti.biz/faq/linux-tcp-tuning/"}}{\fldrslt \ul Linux Tune Network Stack}}\cf2  (Buffers Size) To Increase Networking Performance\
\pard\pardeftab720\sl360\sa180

\b\fs30 \cf2 #4: Remove All Unwanted Nginx Modules\
\pard\pardeftab720\sl420\sa440

\b0\fs28 \cf2 You need to minimizes the number of modules that are compiled directly into the nginx binary. This minimizes risk by limiting the capabilities allowed by the webserver. You can configure and install nginx using only required modules. For example, disable SSI and autoindex module you can type:
\f1\fs24 \cb4 \
\pard\pardeftab720\sl360
\cf2 # ./configure --without-http_autoindex_module --without-http_ssi_module\
# make\
# make install\
\pard\pardeftab720\sl420\sa440

\f0\fs28 \cf2 \cb3 \uc0\u8232 Type the following command to see which modules can be turn on or off while compiling nginx server:
\f1\fs24 \cb4 \
\pard\pardeftab720\sl360
\cf2 # ./configure --help | less\
\pard\pardeftab720\sl420\sa440

\f0\fs28 \cf2 \cb3 \uc0\u8232 Disable nginx modules that you don't need.\
\pard\pardeftab720\sl360\sa180

\fs30 \cf2 (Optional) Change Nginx Version Header\
\pard\pardeftab720\sl420\sa440

\fs28 \cf2 Edit src/http/ngx_http_header_filter_module.c, enter:
\f1\fs24 \cb4 \
\pard\pardeftab720\sl360
\cf2 # vi +48 src/http/ngx_http_header_filter_module.c\
\pard\pardeftab720\sl420\sa440

\f0\fs28 \cf2 \cb3 \uc0\u8232 Find line\
\pard\pardeftab720\sl300

\f1\fs20 \cf2 \cb4 \'a0\
\pard\pardeftab720\sl300
\cf10 static\cf2  \cf10 char\cf2  ngx_http_server_string\cf11 []\cf2  = \cf12 "Server: nginx"\cf2  CRLF;\
\cf10 static\cf2  \cf10 char\cf2  ngx_http_server_full_string\cf11 []\cf2  = \cf12 "Server: "\cf2  NGINX_VER CRLF;\
\'a0\
\pard\pardeftab720\sl420\sa440

\f0\fs28 \cf2 \cb3 Change them as follows:\
\pard\pardeftab720\sl300

\f1\fs20 \cf2 \cb4 \'a0\
\pard\pardeftab720\sl300
\cf10 static\cf2  \cf10 char\cf2  ngx_http_server_string\cf11 []\cf2  = \cf12 "Server: Ninja Web Server"\cf2  CRLF;\
\cf10 static\cf2  \cf10 char\cf2  ngx_http_server_full_string\cf11 []\cf2  = \cf12 "Server: Ninja Web Server"\cf2  CRLF;\
\'a0\
\pard\pardeftab720\sl420\sa440

\f0\fs28 \cf2 \cb3 Save and close the file. Now, you can compile the server. Add the following in nginx.conf to turn off nginx version number displayed on all auto generated error pages:\
\pard\pardeftab720\sl300

\f1\fs20 \cf2 \cb4 server_tokens off\
\pard\pardeftab720\sl360\sa180

\f0\b\fs30 \cf2 \cb3 #5: Use mod_security (only for backend Apache servers)\
\pard\pardeftab720\sl420\sa440

\b0\fs28 \cf2 mod_security provides an application level firewall for Apache. Install {\field{\*\fldinst{HYPERLINK "http://www.cyberciti.biz/faq/rhel-fedora-centos-httpd-mod_security-configuration/"}}{\fldrslt \cf5 \ul \ulc5 mod_security for all backend}} Apache web servers. This will stop many injection attacks.\
\pard\pardeftab720\sl360\sa180

\b\fs30 \cf2 #6: Install SELinux Policy To Harden The Nginx Webserver\
\pard\pardeftab720\sl420\sa440

\b0\fs28 \cf2 By default SELinux will not protect the nginx web server. However, you can install and compile protection as follows. First, install required SELinux compile time support:
\f1\fs24 \cb4 \
\pard\pardeftab720\sl360
\cf2 # yum -y install selinux-policy-targeted selinux-policy-devel\
\pard\pardeftab720\sl420\sa440

\f0\fs28 \cf2 \cb3 \uc0\u8232 Download targeted SELinux policies to harden the nginx webserver on Linux servers from the{\field{\*\fldinst{HYPERLINK "http://sourceforge.net/projects/selinuxnginx/"}}{\fldrslt \cf5 \ul \ulc5 project home}} page:
\f1\fs24 \cb4 \
\pard\pardeftab720\sl360
\cf2 # cd /opt\
# wget 'http://downloads.sourceforge.net/project/selinuxnginx/se-ngix_1_0_10.tar.gz?use_mirror=nchc'\
\pard\pardeftab720\sl420\sa440

\f0\fs28 \cf2 \cb3 \uc0\u8232 Untar the same:
\f1\fs24 \cb4 \
\pard\pardeftab720\sl360
\cf2 # tar -zxvf se-ngix_1_0_10.tar.gz\
\pard\pardeftab720\sl420\sa440

\f0\fs28 \cf2 \cb3 \uc0\u8232 Compile the same
\f1\fs24 \cb4 \
\pard\pardeftab720\sl360
\cf2 # cd se-ngix_1_0_10/nginx\
# make\
\pard\pardeftab720\sl420\sa440

\f0\fs28 \cf2 \cb3 \uc0\u8232 Sample outputs:\
\pard\pardeftab720\sl300

\f1\fs20 \cf2 \cb4 Compiling targeted nginx module\
/usr/bin/checkmodule:  loading policy configuration from tmp/nginx.tmp\
/usr/bin/checkmodule:  policy configuration loaded\
/usr/bin/checkmodule:  writing binary representation (version 6) to tmp/nginx.mod\
Creating targeted nginx.pp policy package\
rm tmp/nginx.mod.fc tmp/nginx.mod\
\pard\pardeftab720\sl420\sa440

\f0\fs28 \cf2 \cb3 Install the resulting nginx.pp SELinux module:
\f1\fs24 \cb4 \
\pard\pardeftab720\sl360
\cf2 # /usr/sbin/semodule -i nginx.pp\
\pard\pardeftab720\sl360\sa180

\f0\b\fs30 \cf2 \cb3 #7: Restrictive Iptables Based Firewall\
\pard\pardeftab720\sl420\sa440

\b0\fs28 \cf2 The following firewall script blocks everything and only allows:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420
\ls3\ilvl0\cf2 {\listtext	\uc0\u9642 	}Incoming HTTP (TCP port 80) requests\
{\listtext	\uc0\u9642 	}Incoming ICMP ping requests\
{\listtext	\uc0\u9642 	}Outgoing ntp (port 123) requests\
{\listtext	\uc0\u9642 	}Outgoing smtp (TCP port 25) requests\
\pard\pardeftab720\sl300

\f3\i\fs20 \cf13 \cb4 #!/bin/bash
\f1\i0 \cf2 \
\pard\pardeftab720\sl300
\cf14 IPT=\cf12 "/sbin/iptables"\cf2 \
\'a0\
\pard\pardeftab720\sl300

\f3\i \cf13 #### IPS ######
\f1\i0 \cf2 \

\f3\i \cf13 # Get server public ip 
\f1\i0 \cf2 \
\pard\pardeftab720\sl300
\cf14 SERVER_IP=\cf2 $
\f2\b \cf15 (
\f1\b0 \cf2 ifconfig eth0 | 
\f2\b \cf6 grep
\f1\b0 \cf2  \cf12 'inet addr:'\cf2  | 
\f2\b \cf6 awk
\f1\b0 \cf2  -F\cf12 'inet addr:'\cf2  \cf12 '\{ print $2\}'\cf2  | 
\f2\b \cf6 awk
\f1\b0 \cf2  \cf12 '\{ print $1\}'
\f2\b \cf15 )
\f1\b0 \cf2 \
\cf14 LB1_IP=\cf12 "204.54.1.1"\cf2 \
\cf14 LB2_IP=\cf12 "204.54.1.2"\cf2 \
\'a0\
\pard\pardeftab720\sl300

\f3\i \cf13 # Do some smart logic so that we can use damm script on LB2 too
\f1\i0 \cf2 \
\pard\pardeftab720\sl300
\cf14 OTHER_LB=\cf12 ""\cf2 \
\cf14 SERVER_IP=\cf12 ""\cf2 \
\pard\pardeftab720\sl300

\f2\b \cf15 [[
\f1\b0 \cf2  \cf12 "$SERVER_IP"\cf2  == \cf12 "$LB1_IP"\cf2  
\f2\b \cf15 ]]
\f1\b0 \cf2  && \cf14 OTHER_LB=\cf12 "$LB2_IP"\cf2  || \cf14 OTHER_LB=\cf12 "$LB1_IP"\cf2 \

\f2\b \cf15 [[
\f1\b0 \cf2  \cf12 "$OTHER_LB"\cf2  == \cf12 "$LB2_IP"\cf2  
\f2\b \cf15 ]]
\f1\b0 \cf2  && \cf14 OPP_LB=\cf12 "$LB1_IP"\cf2  || \cf14 OPP_LB=\cf12 "$LB2_IP"\cf2 \
\'a0\
\pard\pardeftab720\sl300

\f3\i \cf13 ### IPs ###
\f1\i0 \cf2 \
\pard\pardeftab720\sl300
\cf14 PUB_SSH_ONLY=\cf12 "122.xx.yy.zz/29"\cf2 \
\'a0\
\pard\pardeftab720\sl300

\f3\i \cf13 #### FILES #####
\f1\i0 \cf2 \
\pard\pardeftab720\sl300
\cf14 BLOCKED_IP_TDB=\cf2 /root/.fw/blocked.ip.txt\
\cf14 SPOOFIP=\cf12 "127.0.0.0/8 192.168.0.0/16 172.16.0.0/12 10.0.0.0/8 169.254.0.0/16 0.0.0.0/8 240.0.0.0/4 255.255.255.255/32 168.254.0.0/16 224.0.0.0/4 240.0.0.0/5 248.0.0.0/5 192.0.2.0/24"\cf2 \
\cf14 BADIPS=\cf2 $
\f2\b \cf15 (
\f1\b0 \cf2  
\f2\b \cf15 [[
\f1\b0 \cf2  -f \cf14 $
\f2\b \cf15 \{
\f1\b0 \cf14 BLOCKED_IP_TDB
\f2\b \cf15 \}
\f1\b0 \cf2  
\f2\b \cf15 ]]
\f1\b0 \cf2  && 
\f2\b \cf6 egrep
\f1\b0 \cf2  -v \cf12 "^#|^$"\cf2  \cf14 $
\f2\b \cf15 \{
\f1\b0 \cf14 BLOCKED_IP_TDB
\f2\b \cf15 \})
\f1\b0 \cf2 \
\'a0\
\pard\pardeftab720\sl300

\f3\i \cf13 ### Interfaces ###
\f1\i0 \cf2 \
\pard\pardeftab720\sl300
\cf14 PUB_IF=\cf12 "eth0"\cf2    
\f3\i \cf13 # public interface
\f1\i0 \cf2 \
\cf14 LO_IF=\cf12 "lo"\cf2       
\f3\i \cf13 # loopback
\f1\i0 \cf2 \
\cf14 VPN_IF=\cf12 "eth1"\cf2    
\f3\i \cf13 # vpn / private net
\f1\i0 \cf2 \
\'a0\
\pard\pardeftab720\sl300

\f3\i \cf13 ### start firewall ###
\f1\i0 \cf2 \
\pard\pardeftab720\sl300

\f2\b \cf15 echo
\f1\b0 \cf2  \cf12 "Setting LB1 $(hostname) Firewall..."\cf2 \
\'a0\
\pard\pardeftab720\sl300

\f3\i \cf13 # DROP and close everything 
\f1\i0 \cf2 \
\pard\pardeftab720\sl300
\cf14 $IPT\cf2  -P INPUT DROP\
\cf14 $IPT\cf2  -P OUTPUT DROP\
\cf14 $IPT\cf2  -P FORWARD DROP\
\'a0\
\pard\pardeftab720\sl300

\f3\i \cf13 # Unlimited lo access
\f1\i0 \cf2 \
\pard\pardeftab720\sl300
\cf14 $IPT\cf2  -A INPUT -i \cf14 $
\f2\b \cf15 \{
\f1\b0 \cf14 LO_IF
\f2\b \cf15 \}
\f1\b0 \cf2  -j ACCEPT\
\cf14 $IPT\cf2  -A OUTPUT -o \cf14 $
\f2\b \cf15 \{
\f1\b0 \cf14 LO_IF
\f2\b \cf15 \}
\f1\b0 \cf2  -j ACCEPT\
\'a0\
\pard\pardeftab720\sl300

\f3\i \cf13 # Unlimited vpn / pnet access
\f1\i0 \cf2 \
\pard\pardeftab720\sl300
\cf14 $IPT\cf2  -A INPUT -i \cf14 $
\f2\b \cf15 \{
\f1\b0 \cf14 VPN_IF
\f2\b \cf15 \}
\f1\b0 \cf2  -j ACCEPT\
\cf14 $IPT\cf2  -A OUTPUT -o \cf14 $
\f2\b \cf15 \{
\f1\b0 \cf14 VPN_IF
\f2\b \cf15 \}
\f1\b0 \cf2  -j ACCEPT\
\'a0\
\pard\pardeftab720\sl300

\f3\i \cf13 # Drop sync
\f1\i0 \cf2 \
\pard\pardeftab720\sl300
\cf14 $IPT\cf2  -A INPUT -i \cf14 $
\f2\b \cf15 \{
\f1\b0 \cf14 PUB_IF
\f2\b \cf15 \}
\f1\b0 \cf2  -p tcp ! --syn -m state --state NEW -j DROP\
\'a0\
\pard\pardeftab720\sl300

\f3\i \cf13 # Drop Fragments
\f1\i0 \cf2 \
\pard\pardeftab720\sl300
\cf14 $IPT\cf2  -A INPUT -i \cf14 $
\f2\b \cf15 \{
\f1\b0 \cf14 PUB_IF
\f2\b \cf15 \}
\f1\b0 \cf2  -f -j DROP\
\'a0\
\cf14 $IPT\cf2   -A INPUT -i \cf14 $
\f2\b \cf15 \{
\f1\b0 \cf14 PUB_IF
\f2\b \cf15 \}
\f1\b0 \cf2  -p tcp --tcp-flags ALL FIN,URG,PSH -j DROP\
\cf14 $IPT\cf2   -A INPUT -i \cf14 $
\f2\b \cf15 \{
\f1\b0 \cf14 PUB_IF
\f2\b \cf15 \}
\f1\b0 \cf2  -p tcp --tcp-flags ALL ALL -j DROP\
\'a0\
\pard\pardeftab720\sl300

\f3\i \cf13 # Drop NULL packets
\f1\i0 \cf2 \
\pard\pardeftab720\sl300
\cf14 $IPT\cf2   -A INPUT -i \cf14 $
\f2\b \cf15 \{
\f1\b0 \cf14 PUB_IF
\f2\b \cf15 \}
\f1\b0 \cf2  -p tcp --tcp-flags ALL NONE -m limit --limit \cf0 5\cf2 /m --limit-burst \cf0 7\cf2  -j LOG --log-prefix \cf12 " NULL Packets "\cf2 \
\cf14 $IPT\cf2   -A INPUT -i \cf14 $
\f2\b \cf15 \{
\f1\b0 \cf14 PUB_IF
\f2\b \cf15 \}
\f1\b0 \cf2  -p tcp --tcp-flags ALL NONE -j DROP\
\'a0\
\cf14 $IPT\cf2   -A INPUT -i \cf14 $
\f2\b \cf15 \{
\f1\b0 \cf14 PUB_IF
\f2\b \cf15 \}
\f1\b0 \cf2  -p tcp --tcp-flags SYN,RST SYN,RST -j DROP\
\'a0\
\pard\pardeftab720\sl300

\f3\i \cf13 # Drop XMAS
\f1\i0 \cf2 \
\pard\pardeftab720\sl300
\cf14 $IPT\cf2   -A INPUT -i \cf14 $
\f2\b \cf15 \{
\f1\b0 \cf14 PUB_IF
\f2\b \cf15 \}
\f1\b0 \cf2  -p tcp --tcp-flags SYN,FIN SYN,FIN -m limit --limit \cf0 5\cf2 /m --limit-burst \cf0 7\cf2  -j LOG --log-prefix \cf12 " XMAS Packets "\cf2 \
\cf14 $IPT\cf2   -A INPUT -i \cf14 $
\f2\b \cf15 \{
\f1\b0 \cf14 PUB_IF
\f2\b \cf15 \}
\f1\b0 \cf2  -p tcp --tcp-flags SYN,FIN SYN,FIN -j DROP\
\'a0\
\pard\pardeftab720\sl300

\f3\i \cf13 # Drop FIN packet scans
\f1\i0 \cf2 \
\pard\pardeftab720\sl300
\cf14 $IPT\cf2   -A INPUT -i \cf14 $
\f2\b \cf15 \{
\f1\b0 \cf14 PUB_IF
\f2\b \cf15 \}
\f1\b0 \cf2  -p tcp --tcp-flags FIN,ACK FIN -m limit --limit \cf0 5\cf2 /m --limit-burst \cf0 7\cf2  -j LOG --log-prefix \cf12 " Fin Packets Scan "\cf2 \
\cf14 $IPT\cf2   -A INPUT -i \cf14 $
\f2\b \cf15 \{
\f1\b0 \cf14 PUB_IF
\f2\b \cf15 \}
\f1\b0 \cf2  -p tcp --tcp-flags FIN,ACK FIN -j DROP\
\'a0\
\cf14 $IPT\cf2   -A INPUT -i \cf14 $
\f2\b \cf15 \{
\f1\b0 \cf14 PUB_IF
\f2\b \cf15 \}
\f1\b0 \cf2  -p tcp --tcp-flags ALL SYN,RST,ACK,FIN,URG -j DROP\
\'a0\
\pard\pardeftab720\sl300

\f3\i \cf13 # Log and get rid of broadcast / multicast and invalid 
\f1\i0 \cf2 \
\pard\pardeftab720\sl300
\cf14 $IPT\cf2   -A INPUT -i \cf14 $
\f2\b \cf15 \{
\f1\b0 \cf14 PUB_IF
\f2\b \cf15 \}
\f1\b0 \cf2  -m pkttype --pkt-
\f2\b \cf15 type
\f1\b0 \cf2  broadcast -j LOG --log-prefix \cf12 " Broadcast "\cf2 \
\cf14 $IPT\cf2   -A INPUT -i \cf14 $
\f2\b \cf15 \{
\f1\b0 \cf14 PUB_IF
\f2\b \cf15 \}
\f1\b0 \cf2  -m pkttype --pkt-
\f2\b \cf15 type
\f1\b0 \cf2  broadcast -j DROP\
\'a0\
\cf14 $IPT\cf2   -A INPUT -i \cf14 $
\f2\b \cf15 \{
\f1\b0 \cf14 PUB_IF
\f2\b \cf15 \}
\f1\b0 \cf2  -m pkttype --pkt-
\f2\b \cf15 type
\f1\b0 \cf2  multicast -j LOG --log-prefix \cf12 " Multicast "\cf2 \
\cf14 $IPT\cf2   -A INPUT -i \cf14 $
\f2\b \cf15 \{
\f1\b0 \cf14 PUB_IF
\f2\b \cf15 \}
\f1\b0 \cf2  -m pkttype --pkt-
\f2\b \cf15 type
\f1\b0 \cf2  multicast -j DROP\
\'a0\
\cf14 $IPT\cf2   -A INPUT -i \cf14 $
\f2\b \cf15 \{
\f1\b0 \cf14 PUB_IF
\f2\b \cf15 \}
\f1\b0 \cf2  -m state --state INVALID -j LOG --log-prefix \cf12 " Invalid "\cf2 \
\cf14 $IPT\cf2   -A INPUT -i \cf14 $
\f2\b \cf15 \{
\f1\b0 \cf14 PUB_IF
\f2\b \cf15 \}
\f1\b0 \cf2  -m state --state INVALID -j DROP\
\'a0\
\pard\pardeftab720\sl300

\f3\i \cf13 # Log and block spoofed ips
\f1\i0 \cf2 \
\pard\pardeftab720\sl300
\cf14 $IPT\cf2  -N spooflist\
\pard\pardeftab720\sl300

\f2\b \cf0 for
\f1\b0 \cf2  ipblock 
\f2\b \cf0 in
\f1\b0 \cf2  \cf14 $SPOOFIP\cf2 \

\f2\b \cf0 do
\f1\b0 \cf2 \
         \cf14 $IPT\cf2  -A spooflist -i \cf14 $
\f2\b \cf15 \{
\f1\b0 \cf14 PUB_IF
\f2\b \cf15 \}
\f1\b0 \cf2  -s \cf14 $ipblock\cf2  -j LOG --log-prefix \cf12 " SPOOF List Block "\cf2 \
         \cf14 $IPT\cf2  -A spooflist -i \cf14 $
\f2\b \cf15 \{
\f1\b0 \cf14 PUB_IF
\f2\b \cf15 \}
\f1\b0 \cf2  -s \cf14 $ipblock\cf2  -j DROP\

\f2\b \cf0 done
\f1\b0 \cf2 \
\pard\pardeftab720\sl300
\cf14 $IPT\cf2  -I INPUT -j spooflist\
\cf14 $IPT\cf2  -I OUTPUT -j spooflist\
\cf14 $IPT\cf2  -I FORWARD -j spooflist\
\'a0\
\pard\pardeftab720\sl300

\f3\i \cf13 # Allow 
\f4\b \cf6 ssh
\f3\b0 \cf13  only from selected public ips
\f1\i0 \cf2 \
\pard\pardeftab720\sl300

\f2\b \cf0 for
\f1\b0 \cf2  ip 
\f2\b \cf0 in
\f1\b0 \cf2  \cf14 $
\f2\b \cf15 \{
\f1\b0 \cf14 PUB_SSH_ONLY
\f2\b \cf15 \}
\f1\b0 \cf2 \

\f2\b \cf0 do
\f1\b0 \cf2 \
        \cf14 $IPT\cf2  -A INPUT -i \cf14 $
\f2\b \cf15 \{
\f1\b0 \cf14 PUB_IF
\f2\b \cf15 \}
\f1\b0 \cf2  -s \cf14 $
\f2\b \cf15 \{
\f1\b0 \cf14 ip
\f2\b \cf15 \}
\f1\b0 \cf2  -p tcp -d \cf14 $
\f2\b \cf15 \{
\f1\b0 \cf14 SERVER_IP
\f2\b \cf15 \}
\f1\b0 \cf2  --destination-port \cf0 22\cf2  -j ACCEPT\
        \cf14 $IPT\cf2  -A OUTPUT -o \cf14 $
\f2\b \cf15 \{
\f1\b0 \cf14 PUB_IF
\f2\b \cf15 \}
\f1\b0 \cf2  -d \cf14 $
\f2\b \cf15 \{
\f1\b0 \cf14 ip
\f2\b \cf15 \}
\f1\b0 \cf2  -p tcp -s \cf14 $
\f2\b \cf15 \{
\f1\b0 \cf14 SERVER_IP
\f2\b \cf15 \}
\f1\b0 \cf2  --sport \cf0 22\cf2  -j ACCEPT\

\f2\b \cf0 done
\f1\b0 \cf2 \
\'a0\
\pard\pardeftab720\sl300

\f3\i \cf13 # allow incoming ICMP 
\f4\b \cf6 ping
\f3\b0 \cf13  pong stuff
\f1\i0 \cf2 \
\pard\pardeftab720\sl300
\cf14 $IPT\cf2  -A INPUT -i \cf14 $
\f2\b \cf15 \{
\f1\b0 \cf14 PUB_IF
\f2\b \cf15 \}
\f1\b0 \cf2  -p icmp --icmp-
\f2\b \cf15 type
\f1\b0 \cf2  \cf0 8\cf2  -s \cf0 0\cf2 /\cf0 0\cf2  -m state --state NEW,ESTABLISHED,RELATED -m limit --limit \cf0 30\cf2 /sec  -j ACCEPT\
\cf14 $IPT\cf2  -A OUTPUT -o \cf14 $
\f2\b \cf15 \{
\f1\b0 \cf14 PUB_IF
\f2\b \cf15 \}
\f1\b0 \cf2  -p icmp --icmp-
\f2\b \cf15 type
\f1\b0 \cf2  \cf0 0\cf2  -d \cf0 0\cf2 /\cf0 0\cf2  -m state --state ESTABLISHED,RELATED -j ACCEPT\
\'a0\
\pard\pardeftab720\sl300

\f3\i \cf13 # allow incoming HTTP port \cf0 80
\f1\i0 \cf2 \
\pard\pardeftab720\sl300
\cf14 $IPT\cf2  -A INPUT -i \cf14 $
\f2\b \cf15 \{
\f1\b0 \cf14 PUB_IF
\f2\b \cf15 \}
\f1\b0 \cf2  -p tcp -s \cf0 0\cf2 /\cf0 0\cf2  --sport \cf0 1024\cf2 :\cf0 65535\cf2  --dport \cf0 80\cf2  -m state --state NEW,ESTABLISHED -j ACCEPT\
\cf14 $IPT\cf2  -A OUTPUT -o \cf14 $
\f2\b \cf15 \{
\f1\b0 \cf14 PUB_IF
\f2\b \cf15 \}
\f1\b0 \cf2  -p tcp --sport \cf0 80\cf2  -d \cf0 0\cf2 /\cf0 0\cf2  --dport \cf0 1024\cf2 :\cf0 65535\cf2  -m state --state ESTABLISHED -j ACCEPT\
\'a0\
\'a0\
\pard\pardeftab720\sl300

\f3\i \cf13 # allow outgoing ntp 
\f1\i0 \cf2 \
\pard\pardeftab720\sl300
\cf14 $IPT\cf2  -A OUTPUT -o \cf14 $
\f2\b \cf15 \{
\f1\b0 \cf14 PUB_IF
\f2\b \cf15 \}
\f1\b0 \cf2  -p udp --dport \cf0 123\cf2  -m state --state NEW,ESTABLISHED -j ACCEPT\
\cf14 $IPT\cf2  -A INPUT -i \cf14 $
\f2\b \cf15 \{
\f1\b0 \cf14 PUB_IF
\f2\b \cf15 \}
\f1\b0 \cf2  -p udp --sport \cf0 123\cf2  -m state --state ESTABLISHED -j ACCEPT\
\'a0\
\pard\pardeftab720\sl300

\f3\i \cf13 # allow outgoing smtp
\f1\i0 \cf2 \
\pard\pardeftab720\sl300
\cf14 $IPT\cf2  -A OUTPUT -o \cf14 $
\f2\b \cf15 \{
\f1\b0 \cf14 PUB_IF
\f2\b \cf15 \}
\f1\b0 \cf2  -p tcp --dport \cf0 25\cf2  -m state --state NEW,ESTABLISHED -j ACCEPT\
\cf14 $IPT\cf2  -A INPUT -i \cf14 $
\f2\b \cf15 \{
\f1\b0 \cf14 PUB_IF
\f2\b \cf15 \}
\f1\b0 \cf2  -p tcp --sport \cf0 25\cf2  -m state --state ESTABLISHED -j ACCEPT\
\'a0\
\pard\pardeftab720\sl300

\f3\i \cf13 ### add your other rules here ####
\f1\i0 \cf2 \
\'a0\

\f3\i \cf13 #######################
\f1\i0 \cf2 \

\f3\i \cf13 # drop and log everything else
\f1\i0 \cf2 \
\pard\pardeftab720\sl300
\cf14 $IPT\cf2  -A INPUT -m limit --limit \cf0 5\cf2 /m --limit-burst \cf0 7\cf2  -j LOG --log-prefix \cf12 " DEFAULT DROP "\cf2 \
\cf14 $IPT\cf2  -A INPUT -j DROP\
\'a0\
\pard\pardeftab720\sl300

\f2\b \cf15 exit
\f1\b0 \cf2  \cf0 0\cf2 \
\pard\pardeftab720\sl360\sa180

\f0\b\fs30 \cf2 \cb3 #8: Controlling Buffer Overflow Attacks\
\pard\pardeftab720\sl420\sa440

\b0\fs28 \cf2 Edit nginx.conf and set the buffer size limitations for all clients.
\f1\fs24 \cb4 \
\pard\pardeftab720\sl360
\cf2 # vi /usr/local/nginx/conf/nginx.conf\
\pard\pardeftab720\sl420\sa440

\f0\fs28 \cf2 \cb3 \uc0\u8232 Edit and set the buffer size limitations for all clients as follows:\
\pard\pardeftab720\sl300

\f1\fs20 \cf2 \cb4 \'a0\
 ## Start: Size Limits & Buffer Overflows ##\
  client_body_buffer_size  1K
\f3\i \cf9 ;
\f1\i0 \cf2 \
  client_header_buffer_size 1k
\f3\i \cf9 ;
\f1\i0 \cf2 \
  client_max_body_size 1k
\f3\i \cf9 ;
\f1\i0 \cf2 \
  large_client_header_buffers 2 1k
\f3\i \cf9 ;
\f1\i0 \cf2 \
 ## END: Size Limits & Buffer Overflows ##\
\'a0\
\pard\pardeftab720\sl420\sa440

\f0\fs28 \cf2 \cb3 Where,\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420
\ls4\ilvl0
\b \cf2 {\listtext	1.	}client_body_buffer_size 1k
\b0  - (default is 8k or 16k) The directive specifies the client request body buffer size.\
\ls4\ilvl0
\b {\listtext	2.	}client_header_buffer_size 1k
\b0  - Directive sets the headerbuffer size for the request header from client. For the overwhelming majority of requests a buffer size of 1K is sufficient. Increase this if you have a custom header or a large cookie sent from the client (e.g., wap client).\
\ls4\ilvl0
\b {\listtext	3.	}client_max_body_size 1k
\b0 - Directive assigns the maximum accepted body size of client request, indicated by the line Content-Length in the header of request. If size is greater the given one, then the client gets the error "Request Entity Too Large" (413). Increase this when you are getting file uploads via the POST method.\
\ls4\ilvl0
\b {\listtext	4.	}large_client_header_buffers 2 1k
\b0  - Directive assigns the maximum number and size of buffers for large headers to read from client request. By default the size of one buffer is equal to the size of page, depending on platform this either 4K or 8K, if at the end of working request connection converts to state keep-alive, then these buffers are freed. 2x1k will accept 2kB data URI. This will also help combat bad bots and DoS attacks.\
\pard\pardeftab720\sl420\sa440
\cf2 You also need to control timeouts to improve server performance and cut clients. Edit it as follows:\
\pard\pardeftab720\sl300

\f1\fs20 \cf2 \cb4 \'a0\
 ## Start: Timeouts ##\
  client_body_timeout   10
\f3\i \cf9 ;
\f1\i0 \cf2 \
  client_header_timeout 10
\f3\i \cf9 ;
\f1\i0 \cf2 \
  keepalive_timeout     5 5
\f3\i \cf9 ;
\f1\i0 \cf2 \
  send_timeout          10
\f3\i \cf9 ;
\f1\i0 \cf2 \
## End: Timeouts ##\
\'a0\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420
\ls5\ilvl0
\f0\b\fs28 \cf2 \cb3 {\listtext	1.	}client_body_timeout 10;
\b0  - Directive sets the read timeout for the request body from client. The timeout is set only if a body is not get in one readstep. If after this time the client send nothing, nginx returns error "Request time out" (408). The default is 60.\
\ls5\ilvl0
\b {\listtext	2.	}client_header_timeout 10;
\b0  - Directive assigns timeout with reading of the title of the request of client. The timeout is set only if a header is not get in one readstep. If after this time the client send nothing, nginx returns error "Request time out" (408).\
\ls5\ilvl0
\b {\listtext	3.	}keepalive_timeout 5 5;
\b0  - The first parameter assigns the timeout for keep-alive connections with the client. The server will close connections after this time. The optional second parameter assigns the time value in the header Keep-Alive: timeout=time of the response. This header can convince some browsers to close the connection, so that the server does not have to. Without this parameter, nginx does not send a Keep-Alive header (though this is not what makes a connection "keep-alive").\
\ls5\ilvl0
\b {\listtext	4.	}send_timeout 10;
\b0  - Directive assigns response timeout to client. Timeout is established not on entire transfer of answer, but only between two operations of reading, if after this time client will take nothing, then nginx is shutting down the connection.\
\pard\pardeftab720\sl360\sa180

\b\fs30 \cf2 #9: Control Simultaneous Connections\
\pard\pardeftab720\sl420\sa440

\b0\fs28 \cf2 You can use NginxHttpLimitZone module to limit the number of simultaneous connections for the assigned session or as a special case, from one IP address. Edit nginx.conf:\
\pard\pardeftab720\sl300

\f1\fs20 \cf2 \cb4 \'a0\
### Directive describes the zone, in which the session states are stored i.e. store in slimits. ###\
### 1m can handle 32000 sessions with 32 bytes/session, set to 5m x 32000 session ###\
       limit_zone slimits $binary_remote_addr 5m
\f3\i \cf9 ;
\f1\i0 \cf2 \
\'a0\
### Control maximum number of simultaneous connections for one session i.e. ###\
### restricts the amount of connections from a single ip address ###\
        limit_conn slimits 5
\f3\i \cf9 ;
\f1\i0 \cf2 \
\'a0\
\pard\pardeftab720\sl420\sa440

\f0\fs28 \cf2 \cb3 The above will limits remote clients to no more than 5 concurrently "open" connections per remote ip address.\
\pard\pardeftab720\sl360\sa180

\b\fs30 \cf2 #10: Allow Access To Our Domain Only\
\pard\pardeftab720\sl420\sa440

\b0\fs28 \cf2 If bot is just making random server scan for all domains, just deny it. You must only allow configured virtual domain or reverse proxy requests. You don't want to display request using an IP address:\
\pard\pardeftab720\sl300

\f1\fs20 \cf2 \cb4 ## Only requests to our Host are allowed i.e. nixcraft.in, images.nixcraft.in and www.nixcraft.in\
      if ($host !~ ^(nixcraft.in|www.nixcraft.in|images.nixcraft.in)$ ) \{\
         return 444;\
      \}\
##\
\pard\pardeftab720\sl360\sa180

\f0\b\fs30 \cf2 \cb3 #11: Limit Available Methods\
\pard\pardeftab720\sl420\sa440

\b0\fs28 \cf2 GET and POST are the most common methods on the Internet. Web server methods are defined in {\field{\*\fldinst{HYPERLINK "http://www.ietf.org/rfc/rfc2616.txt"}}{\fldrslt \cf5 \ul \ulc5 RFC 2616}}. If a web server does not require the implementation of all available methods, they should be disabled. The following will filter and only allow GET, HEAD and POST methods:\
\pard\pardeftab720\sl300

\f1\fs20 \cf2 \cb4 ## Only allow these request methods ##\
     if ($request_method !~ ^(GET|HEAD|POST)$ ) \{\
         return 444;\
     \}\
## Do not accept DELETE, SEARCH and other methods ##\
\pard\pardeftab720\sl360\sa180

\f0\fs30 \cf2 \cb3 More About HTTP Methods\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420
\ls6\ilvl0
\fs28 \cf2 {\listtext	\uc0\u9642 	}The GET method is used to request document such as http://www.cyberciti.biz/index.php.\
{\listtext	\uc0\u9642 	}The HEAD method is identical to GET except that the server MUST NOT return a message-body in the response.\
{\listtext	\uc0\u9642 	}The POST method may involve anything, like storing or updating data, or ordering a product, or sending E-mail by submitting the form. This is usually processed using the server side scripting such as PHP, PERL, Python and so on. You must use this if you want to upload files and process forms on server.\
\pard\pardeftab720\sl360\sa180

\b\fs30 \cf2 #12: How Do I Deny Certain User-Agents?\
\pard\pardeftab720\sl420\sa440

\b0\fs28 \cf2 You can easily block user-agents i.e. scanners, bots, and spammers who may be abusing your server.\
\pard\pardeftab720\sl300

\f1\fs20 \cf2 \cb4 ## Block download agents ##\
     if ($http_user_agent ~* LWP::Simple|BBBike|wget) \{\
            return 403;\
     \}\
##\
\pard\pardeftab720\sl420\sa440

\f0\fs28 \cf2 \cb3 Block robots called msnbot and scrapbot:\
\pard\pardeftab720\sl300

\f1\fs20 \cf2 \cb4 ## Block some robots ##\
     if ($http_user_agent ~* msnbot|scrapbot) \{\
            return 403;\
     \}\
\pard\pardeftab720\sl360\sa180

\f0\b\fs30 \cf2 \cb3 #12: How Do I Block Referral Spam?\
\pard\pardeftab720\sl420\sa440

\b0\fs28 \cf2 Referer spam is dengerouns. It can harm your SEO ranking via web-logs (if published) as referer field refer to their spammy site. You can block access to referer spammers with these lines.\
\pard\pardeftab720\sl300

\f1\fs20 \cf2 \cb4 ## Deny certain Referers ###\
     if ( $http_referer ~* (babes|forsale|girl|jewelry|love|nudit|organic|poker|porn|sex|teen) )\
     \{\
         # return 404;\
         return 403;\
     \}\
##\
\pard\pardeftab720\sl360\sa180

\f0\b\fs30 \cf2 \cb3 #13: How Do I Stop Image Hotlinking?\
\pard\pardeftab720\sl420\sa440

\b0\fs28 \cf2 Image or HTML hotlinking means someone makes a link to your site to one of your images, but displays it on their own site. The end result you will end up paying for bandwidth bills and make the content look like part of the hijacker's site. This is usually done on forums and blogs. I strongly suggest you block and stop image hotlinking at your server level itself.\
\pard\pardeftab720\sl300

\f1\fs20 \cf2 \cb4 # Stop deep linking or hot linking\
location /images/ \{\
  valid_referers none blocked www.example.com example.com;\
   if ($invalid_referer) \{\
     return   403;\
   \}\
\}\
\pard\pardeftab720\sl360\sa180

\f0\fs30 \cf2 \cb3 Example: Rewrite And Display Image\
\pard\pardeftab720\sl420\sa440

\fs28 \cf2 Another example with link to banned image:\
\pard\pardeftab720\sl300

\f1\fs20 \cf2 \cb4 valid_referers blocked www.example.com example.com;\
 if ($invalid_referer) \{\
  rewrite ^/images/uploads.*\\.(gif|jpg|jpeg|png)$ http://www.examples.com/banned.jpg last\
 \}\
\pard\pardeftab720\sl420\sa440

\f0\fs28 \cf2 \cb3 See also:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420
\ls7\ilvl0\cf2 {\listtext	\uc0\u9642 	}HowTo: {\field{\*\fldinst{HYPERLINK "http://nginx.org/pipermail/nginx/2007-June/001082.html"}}{\fldrslt \cf5 \ul \ulc5 Use nginx map}} to block image hotlinking. This is useful if you want to block tons of domains.\
\pard\pardeftab720\sl360\sa180

\b\fs30 \cf2 #14: Directory Restrictions\
\pard\pardeftab720\sl420\sa440

\b0\fs28 \cf2 You can set access control for a specified directory. All web directories should be configured on a case-by-case basis, allowing access only where needed.\
\pard\pardeftab720\sl360\sa180

\fs30 \cf2 Limiting Access By Ip Address\
\pard\pardeftab720\sl420\sa440

\fs28 \cf2 You can limit access to directory {\field{\*\fldinst{HYPERLINK "http://www.cyberciti.biz/faq/linux-unix-nginx-access-control-howto/"}}{\fldrslt \cf5 \ul \ulc5 by ip address}} to /docs/ directory:\
\pard\pardeftab720\sl300

\f1\fs20 \cf2 \cb4 location /docs/ \{\
  ## block one workstation\
  deny    192.168.1.1;\
  ## allow anyone in 192.168.1.0/24\
  allow   192.168.1.0/24;\
  ## drop rest of the world\
  deny    all;\
\}\
\pard\pardeftab720\sl360\sa180

\f0\fs30 \cf2 \cb3 Password Protect The Directory\
\pard\pardeftab720\sl420\sa440

\fs28 \cf2 First create the password file and add a user called vivek:
\f1\fs24 \cb4 \
\pard\pardeftab720\sl360
\cf2 # mkdir /usr/local/nginx/conf/.htpasswd/\
# htpasswd -c /usr/local/nginx/conf/.htpasswd/passwd vivek\
\pard\pardeftab720\sl420\sa440

\f0\fs28 \cf2 \cb3 \uc0\u8232 Edit nginx.conf and protect the required directories as follows:\
\pard\pardeftab720\sl300

\f1\fs20 \cf2 \cb4 ### Password Protect /personal-images/ and /delta/ directories ###\
location ~ /(personal-images/.*|delta/.*) \{\
  auth_basic  "Restricted";\
  auth_basic_user_file   /usr/local/nginx/conf/.htpasswd/passwd;\
\}\
\pard\pardeftab720\sl420\sa440

\f0\fs28 \cf2 \cb3 Once a password file has been generated, subsequent users can be added with the following command:
\f1\fs24 \cb4 \
\pard\pardeftab720\sl360
\cf2 # htpasswd -s /usr/local/nginx/conf/.htpasswd/passwd userName\
\pard\pardeftab720\sl360\sa180

\f0\b\fs30 \cf2 \cb3 #15: Nginx SSL Configuration\
\pard\pardeftab720\sl420\sa440

\b0\fs28 \cf2 HTTP is a plain text protocol and it is open to passive monitoring. You should use SSL to to encrypt your content for users.\
\pard\pardeftab720\sl360\sa180

\fs30 \cf2 Create an SSL Certificate\
\pard\pardeftab720\sl420\sa440

\fs28 \cf2 Type the following commands:
\f1\fs24 \cb4 \
\pard\pardeftab720\sl360
\cf2 # cd /usr/local/nginx/conf\
# openssl genrsa -des3 -out server.key 1024\
# openssl req -new -key server.key -out server.csr\
# cp server.key server.key.org\
# openssl rsa -in server.key.org -out server.key\
# openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt\
\pard\pardeftab720\sl420\sa440

\f0\fs28 \cf2 \cb3 \uc0\u8232 Edit nginx.conf and update it as follows:\
\pard\pardeftab720\sl300

\f1\fs20 \cf2 \cb4 server \{\
    server_name example.com;\
    listen 443;\
    ssl on;\
    ssl_certificate /usr/local/nginx/conf/server.crt;\
    ssl_certificate_key /usr/local/nginx/conf/server.key;\
    access_log /usr/local/nginx/logs/ssl.access.log;\
    error_log /usr/local/nginx/logs/ssl.error.log;\
\}\
\pard\pardeftab720\sl420\sa440

\f0\fs28 \cf2 \cb3 Restart the nginx:
\f1\fs24 \cb4 \
\pard\pardeftab720\sl360
\cf2 # /usr/local/nginx/sbin/nginx -s reload\
\pard\pardeftab720\sl420\sa440

\f0\fs28 \cf2 \cb3 \uc0\u8232 See also:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420
\ls8\ilvl0\cf2 {\listtext	\uc0\u9642 	}For more information, read the {\field{\*\fldinst{HYPERLINK "http://wiki.nginx.org/NginxHttpSslModule"}}{\fldrslt \cf5 \ul \ulc5 Nginx SSL documentation}}.\
\pard\pardeftab720\sl360\sa180

\b\fs30 \cf2 #16: Nginx And PHP Security Tips\
\pard\pardeftab720\sl420\sa440

\b0\fs28 \cf2 PHP is one of the popular server side scripting language. Edit /etc/php.ini as follows:\
\pard\pardeftab720\sl300

\f1\fs20 \cf2 \cb4 \'a0\
# Disallow dangerous functions\
\pard\pardeftab720\sl300
\cf7 disable_functions \cf2 =\cf8  phpinfo, system, mail, exec\cf2 \
\'a0\
## Try to limit resources  ##\
\'a0\
# Maximum execution time of each script, in seconds\
\cf7 max_execution_time \cf2 =\cf8  30\cf2 \
\'a0\
# Maximum amount of time each script may spend parsing request data\
\cf7 max_input_time \cf2 =\cf8  60\cf2 \
\'a0\
# Maximum amount of memory a script may consume (8MB)\
\cf7 memory_limit \cf2 =\cf8  8M\cf2 \
\'a0\
# Maximum size of POST data that PHP will accept.\
\cf7 post_max_size \cf2 =\cf8  8M\cf2 \
\'a0\
# Whether to allow HTTP file uploads.\
\cf7 file_uploads \cf2 =\cf8  Off\cf2 \
\'a0\
# Maximum allowed size for uploaded files.\
\cf7 upload_max_filesize \cf2 =\cf8  2M\cf2 \
\'a0\
# Do not expose PHP error messages to external users\
\cf7 display_errors \cf2 =\cf8  Off\cf2 \
\'a0\
# Turn on safe mode\
\cf7 safe_mode \cf2 =\cf8  On\cf2 \
\'a0\
# Only allow access to executables in isolated directory\
\cf7 safe_mode_exec_dir \cf2 =\cf8  php-required-executables-path\cf2 \
\'a0\
# Limit external access to PHP environment\
\cf7 safe_mode_allowed_env_vars \cf2 =\cf8  PHP_\cf2 \
\'a0\
# Restrict PHP information leakage\
\cf7 expose_php \cf2 =\cf8  Off\cf2 \
\'a0\
# Log all errors\
\cf7 log_errors \cf2 =\cf8  On\cf2 \
\'a0\
# Do not register globals for input data\
\cf7 register_globals \cf2 =\cf8  Off\cf2 \
\'a0\
# Minimize allowable PHP post size\
\cf7 post_max_size \cf2 =\cf8  1K\cf2 \
\'a0\
# Ensure PHP redirects appropriately\
cgi.\cf7 force_redirect \cf2 =\cf8  0\cf2 \
\'a0\
# Disallow uploading unless necessary\
\cf7 file_uploads \cf2 =\cf8  Off\cf2 \
\'a0\
# Enable SQL safe mode\
sql.\cf7 safe_mode \cf2 =\cf8  On\cf2 \
\'a0\
# Avoid Opening remote files\
\cf7 allow_url_fopen \cf2 =\cf8  Off\cf2 \
\'a0\
\pard\pardeftab720\sl420\sa440

\f0\fs28 \cf2 \cb3 See also:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420
\ls9\ilvl0\cf5 {\listtext	\uc0\u9642 	}{\field{\*\fldinst{HYPERLINK "http://www.cyberciti.biz/faq/php-resources-limits/"}}{\fldrslt \ul PHP Security: Limit Resources Used By Script}}\cf2 \
\ls9\ilvl0\cf5 {\listtext	\uc0\u9642 	}{\field{\*\fldinst{HYPERLINK "http://www.cyberciti.biz/faq/linux-unix-apache-lighttpd-phpini-disable-functions/"}}{\fldrslt \ul PHP.INI settings: Disable exec, shell_exec, system, popen and Other Functions To Improve Security}}\cf2 \
\pard\pardeftab720\sl360\sa180

\b\fs30 \cf2 #17: Run Nginx In A Chroot Jail (Containers) If Possible\
\pard\pardeftab720\sl420\sa440

\b0\fs28 \cf2 Putting nginx in a chroot jail minimizes the damage done by a potential break-in by isolating the web server to a small section of the filesystem. You {\field{\*\fldinst{HYPERLINK "http://www.cyberciti.biz/faq/howto-run-nginx-in-a-chroot-jail/"}}{\fldrslt \cf5 \ul \ulc5 can use traditional chroot kind}} of setup with nginx. If possible use {\field{\*\fldinst{HYPERLINK "http://www.cyberciti.biz/faq/howto-setup-freebsd-jail-with-ezjail/"}}{\fldrslt \cf5 \ul \ulc5 FreeBSD jails}}, {\field{\*\fldinst{HYPERLINK "http://www.cyberciti.biz/tips/rhel-centos-xen-virtualization-installation-howto.html"}}{\fldrslt \cf5 \ul \ulc5 XEN}}, or {\field{\*\fldinst{HYPERLINK "http://www.cyberciti.biz/faq/openvz-rhel-centos-linux-tutorial/"}}{\fldrslt \cf5 \ul \ulc5 OpenVZ}} virtualization which uses the concept of containers.\
\pard\pardeftab720\sl360\sa180

\b\fs30 \cf2 #18: Limits Connections Per IP At The Firewall Level\
\pard\pardeftab720\sl420\sa440

\b0\fs28 \cf2 A webserver must keep an eye on connections and limit connections per second. This is serving 101. Both pf and iptables can throttle end users before accessing your nginx server.\
\pard\pardeftab720\sl360\sa180

\fs30 \cf2 Linux Iptables: Throttle Nginx Connections Per Second\
\pard\pardeftab720\sl420\sa440

\fs28 \cf2 The following example {\field{\*\fldinst{HYPERLINK "http://www.cyberciti.biz/tips/lighttpd-set-throughput-connections-per-ip.html"}}{\fldrslt \cf5 \ul \ulc5 will drop incoming}} connections if IP make more than 15 connection attempts to port 80 within 60 seconds:\
\pard\pardeftab720\sl300

\f1\fs20 \cf2 \cb4 \'a0\
/sbin/iptables -A INPUT -p tcp --dport \cf0 80\cf2  -i eth0 -m state --state NEW -m recent --
\f2\b \cf0 set
\f1\b0 \cf2 \
/sbin/iptables -A INPUT -p tcp --dport \cf0 80\cf2  -i eth0 -m state --state NEW -m recent --update --seconds \cf0 60\cf2   --hitcount \cf0 15\cf2  -j DROP\
service iptables save\
\'a0\
\pard\pardeftab720\sl360\sa180

\f0\fs30 \cf2 \cb3 BSD PF: Throttle Nginx Connections Per Second\
\pard\pardeftab720\sl420\sa440

\fs28 \cf2 Edit your {\field{\*\fldinst{HYPERLINK "http://www.cyberciti.biz/faq/opebsd-pf-firewall-block-subnets-ip-address/"}}{\fldrslt \cf5 \ul \ulc5 /etc/pf.conf}} and update it as follows. The following will limits the maximum number of connections per source to 100. 15/5 specifies the number of connections per second or span of seconds i.e. rate limit the number of connections to 15 in a 5 second span. If anyone breaks our rules add them to our abusive_ips table and block them for making any further connections. Finally, flush keyword kills all states created by the matching rule which originate from the host which exceeds these limits.\
\pard\pardeftab720\sl300

\f1\fs20 \cf14 \cb4 webserver_ip=\cf12 "202.54.1.1"\cf2 \
table <abusive_ips> persist\
block 
\f2\b \cf0 in
\f1\b0 \cf2  quick from <abusive_ips>\
pass 
\f2\b \cf0 in
\f1\b0 \cf2  on \cf14 $ext_if\cf2  proto tcp to \cf14 $webserver_ip\cf2  port www flags S/SA keep state 
\f2\b \cf15 (
\f1\b0 \cf2 max-src-conn \cf0 100\cf2 , max-src-conn-rate \cf0 15\cf2 /\cf0 5\cf2 , overload <abusive_ips> flush
\f2\b \cf15 )
\f1\b0 \cf2 \
\pard\pardeftab720\sl420\sa440

\f0\fs28 \cf2 \cb3 Please adjust all values as per your requirements and traffic (browsers may open multiple connections to your site). See also:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420
\ls10\ilvl0\cf2 {\listtext	1.	}Sample {\field{\*\fldinst{HYPERLINK "http://bash.cyberciti.biz/firewall/pf-firewall-script/"}}{\fldrslt \cf5 \ul \ulc5 PF firewall}} script.\
{\listtext	2.	}Sample {\field{\*\fldinst{HYPERLINK "http://bash.cyberciti.biz/firewall/linux-iptables-firewall-shell-script-for-standalone-server/"}}{\fldrslt \cf5 \ul \ulc5 Iptables firewall}} script.\
\pard\pardeftab720\sl360\sa180

\b\fs30 \cf2 #19: Configure Operating System to Protect Web Server\
\pard\pardeftab720\sl420\sa440

\b0\fs28 \cf2 Turn on SELinux as described above. Set correct permissions on /nginx document root. The nginx runs as a user named nginx. However, the files in the DocumentRoot (/nginx or /usr/local/nginx/html) should not be owned or writable by that user. To find files with wrong permissions, use:
\f1\fs24 \cb4 \
\pard\pardeftab720\sl360
\cf2 # find /nginx -user nginx\
# find /usr/local/nginx/html -user nginx\
\pard\pardeftab720\sl420\sa440

\f0\fs28 \cf2 \cb3 \uc0\u8232 Make sure you change file ownership to root or other user. A typical set of permission /usr/local/nginx/html/
\f1\fs24 \cb4 \
\pard\pardeftab720\sl360
\cf2 # ls -l /usr/local/nginx/html/\
\pard\pardeftab720\sl420\sa440

\f0\fs28 \cf2 \cb3 \uc0\u8232 Sample outputs:\
\pard\pardeftab720\sl300

\f1\fs20 \cf2 \cb4 -rw-r--r-- 1 root root 925 Jan  3 00:50 error4xx.html\
-rw-r--r-- 1 root root  52 Jan  3 10:00 error5xx.html\
-rw-r--r-- 1 root root 134 Jan  3 00:52 index.html\
\pard\pardeftab720\sl420\sa440

\f0\fs28 \cf2 \cb3 You must delete unwated backup files created by vi or other text editor:
\f1\fs24 \cb4 \
\pard\pardeftab720\sl360
\cf2 # find /nginx -name '.?*' -not -name .ht* -or -name '*~' -or -name '*.bak*' -or -name '*.old*'\
# find /usr/local/nginx/html/ -name '.?*' -not -name .ht* -or -name '*~' -or -name '*.bak*' -or -name '*.old*'\
\pard\pardeftab720\sl420\sa440

\f0\fs28 \cf2 \cb3 \uc0\u8232 Pass -delete option to find command and it will get rid of those files too.\
\pard\pardeftab720\sl360\sa180

\b\fs30 \cf2 #20: Restrict Outgoing Nginx Connections\
\pard\pardeftab720\sl420\sa440

\b0\fs28 \cf2 The crackers will download file locally on your server using tools such as wget. Use iptables to block outgoing connections from nginx user. The {\field{\*\fldinst{HYPERLINK "http://www.cyberciti.biz/tips/block-outgoing-network-access-for-a-single-user-from-my-server-using-iptables.html"}}{\fldrslt \cf5 \ul \ulc5 ipt_owner module attempts}} to match various characteristics of the packet creator, for locally generated packets. It is only valid in the OUTPUT chain. In this example, allow vivek user to connect outside using port 80 (useful for RHN access or to grab CentOS updates via repos):\
\pard\pardeftab720\sl300

\f1\fs20 \cf2 \cb4 /sbin/iptables -A OUTPUT -o eth0 -m owner --uid-owner vivek -p tcp --dport \cf0 80\cf2  -m state --state NEW,ESTABLISHED  -j ACCEPT\
\pard\pardeftab720\sl420\sa440

\f0\fs28 \cf2 \cb3 Add above rule to your iptables based shell script. Do not allow nginx web server user to connect outside.\
}