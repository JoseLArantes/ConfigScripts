user www-data;
worker_processes auto;
pid /var/run/nginx.pid;

events {

  worker_connections 1024;
  multi_accept on;
  use epoll;
}

http {

  ## Silently block all undefined vhost access.
  server {
    server_name _;
    return 444;
  }

  ## Basic Settings

  include /etc/nginx/mime.types;
  default_type application/octet-stream;
  server_tokens off;
  
  ## Security Settings
  
  # For further explanation: http://tautt.com/best-nginx-configuration-for-security/
  add_header X-Frame-Options SAMEORIGIN;
  add_header X-Content-Type-Options nosniff;
  add_header X-XSS-Protection "1; mode=block";
  #add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://ssl.google-analytics.com";
  
  ## Add here all HTTP methods allowed
  map $request_method $bad_method {
    default 1;
    ~(?i)(GET|HEAD|POST) 0;
  }

  ## Logging Settings

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';

  access_log /var/log/nginx/access.log main buffer=32k;
  error_log /var/log/nginx/error.log;

  ## Buffer + Timeout Settings

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;

  client_header_buffer_size 4k;
  types_hash_max_size 2048;
  client_max_body_size 25m;
  connection_pool_size 8192;
  request_pool_size 8k;
  keepalive_timeout 15; #had 65
  reset_timedout_connection on;
  
  # Cache file metadata
  # http://www.nginxtips.com/nginx-open-file-cache/
  open_file_cache max=10000 inactive=10m;
  open_file_cache_valid 20m;
  open_file_cache_min_uses 1;
  open_file_cache_errors on;

  server_names_hash_bucket_size 64;
  server_names_hash_max_size 512;

  ## Gzip Settings

  gzip on;
  gzip_vary on;
  gzip_proxied any;
  gzip_min_length 1485;
  gzip_comp_level 2;
  gzip_http_version 1.1;
  gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
  
  # make sure gzip does not lose large gzipped js or css files
  # see http://blog.leetsoft.com/2007/07/25/nginx-gzip-ssl.html
  gzip_buffers 16 8k;
  
  # Disable gzip for certain browsers.
  gzip_disable “MSIE [1-6].(?!.*SV1)”;
  
  ## Virtual Host Configs

  include /etc/nginx/conf.d/*.conf;
  include /etc/nginx/sites-enabled/*;
  
  # See: https://community.qualys.com/blogs/securitylabs/2013/08/05/configuring-apache-nginx-and-openssl-for-forward-secrecy
  # This MUST come AFTER the lines that includes .../sites-enabled/*, otherwise SSLv3 support may be re-enabled accidentally.
  include snippets/perfect-forward-secrecy.conf;
}


########
VIRTUAL.CONF

# Move the www people to no-www
server {
  listen 80;
  listen [::]:80; #enable for IPv6 support
  server_name www.domain.com;
  return 301 $scheme://domain.com$request_uri;
}

server {
  listen 80;
  listen [::]:80;
  listen 443 ssl;
  listen [::]:443 ssl;
  server_name domain.com;

  # Certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
  ssl_certificate /srv/www/domain.com/ssl/domain.com.crt;
  ssl_certificate_key /srv/www/domnain.com/ssl/domain.com.key;
  
  # Verify chain of trust of OCSP response using Root CA and Intermediate certs
  ssl_trusted_certificate /srv/www/domain.com/ssl/unified-ssl.crt;
  
  root /srv/www/domain.com/htdocs;
  index index.php index.html index.htm;
  charset UTF-8;
  autoindex off;

  # Show "Not Found" 404 errors in place of "Forbidden" 403 errors, because
  # forbidden errors allow attackers potential insight into your server's
  # layout and contents
  error_page 403 =404;

  # It's always good to set logs, note however you cannot turn off the error log
  # Setting error_log off; will simply create a file called 'off'
  access_log /var/log/nginx/domain.com.access.log;
  error_log /var/log/nginx/domain.com.error.log;

  # Vqmod settings
  # Add trailing slash to */vqmod/install requests.
  rewrite /vqmod/install$ $scheme://$host$uri/ permanent;
  
  # Run index.php on /vqmod/install calls
  location /vqmod/install/ {
    index index.php;
  }
  
  # Nginx configuration of vqmod htaccess
  location /srv/www/domain.com/htdocs/vqmod/ {
    location ~ \.(xml|cache) {
      deny all;
    }
  }
  # End Vqmod settings
  
  # SEO URL Settings
  # Nginx configuration of OC htaccess
  location = /sitemap.xml {
    rewrite ^(.*)$ /index.php?route=feed/google_sitemap break; 
  } 

  location = /googlebase.xml {
    rewrite ^(.*)$ /index.php?route=feed/google_base break; 
  } 

  location / {
    # This try_files directive is used to enable SEO-friendly URLs for OpenCart
    try_files $uri $uri/ @opencart;
  }

  location @opencart {
    rewrite ^/(.+)$ /index.php?_route_=$1 last;
  }
  # End SEO settings

  # Make sure files with the following extensions do not get loaded by nginx because nginx would display the source code, and these files can contain PASSWORDS!
  location ~* \.(engine|inc|info|ini|install|log|make|module|profile|test|po|sh|.*sql|theme|tpl(\.php)?|xtmpl)$|^(\..*|Entries.*|Repository|Root|Tag|Template)$|\.php_ {
    deny all;
  }

  # Do not log access to the favicon, to keep the logs cleaner
  location = /favicon.ico {
    log_not_found off;
    access_log off;
  }

  location = /apple-touch-icon.png {
    log_not_found off;
    access_log off;
  }

  location = /apple-touch-icon-precomposed.png {
    log_not_found off;
    access_log off;
  }

  # This block will catch static file requests, such as images, css, js
  # The ?: prefix is a 'non-capturing' mark, meaning we do not require
  # the pattern to be captured into $1 which should help improve performance
  location ~* \.(?:3gp|gif|jpg|jpe?g|png|ico|wmv|avi|asf|asx|mpg|mpeg|mp4|pls|mp3|mid|wav|swf|flv|txt|js|css|exe|zip|tar|rar|gz|tgz|bz2|uha|7z|doc|docx|xls|xlsx|pdf|iso|woff|woff2|eot|otf|ttf)$ {
    # Some basic cache-control for static files to be sent to the browser
    expires max;
    add_header Pragma public;
    add_header Cache-Control "public, must-revalidate, proxy-revalidate";
  }

  # Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
  # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
  location ~ /\. {
    access_log off;
    log_not_found off;
    deny all;
  }

  location ~ ~$ {
    access_log off;
    log_not_found off;
    deny all;
  }

  # Deny access to any files with a .php extension in these directories
  # Works in sub-directory installs and also in multisite network
  # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
  location ~* /(?:cache|logs|image|download)/.*\.php$ {
    deny all;
  }
  
  # Make sure these get through
  location = /robots.txt {
    allow all;
    log_not_found off;
    access_log off;
  }
  
  # Fix for Firefox issue with cross site font icons
  location ~* \.(eot|otf|ttf|woff)$ {
    add_header Access-Control-Allow-Origin *;
  }

  # redirect server error pages to the static page /50x.html
  error_page 500 502 503 504 /50x.html;
    location = /50x.html {
    root /usr/share/nginx/www;
  }

  # Pass all .php files onto a php-fpm/php-fcgi server.
  location ~ [^/]\.php(/|$) {
    # Regex to split $uri to $fastcgi_script_name and $fastcgi_path
    fastcgi_split_path_info ^(.+\.php)(/.+)$;

    # Check that the PHP script exists before passing it
    try_files $fastcgi_script_name =404;

    # Bypass the fact that try_files resets $fastcgi_path_info
    # see: http://trac.nginx.org/nginx/ticket/321
    set $path_info $fastcgi_path_info;
    fastcgi_param PATH_INFO $path_info;

    fastcgi_pass unix:/var/run/domain.com.sock;
    fastcgi_index index.php;
    # Uncomment if site is HTTPS
    #fastcgi_param HTTPS on;
    include fastcgi.conf;
  }

  # Use this block if PHPMyAdmin is enabled for domain.com
  location /phpmyadmin {
    root /usr/share/;
    index index.php index.html index.htm;

    location ~ ^/phpmyadmin/(.+\.php)$ {
      try_files $uri =404;
      root /usr/share/;
      fastcgi_pass unix:/var/run/domain.com.sock;
      fastcgi_index index.php;
      include fastcgi.conf;
    }

    location ~* ^/phpmyadmin/(.+\.(jpg|jpeg|gif|css|png|js|ico|html|xml|txt))$ {
      root /usr/share/;
    }
  }

  location /phpMyAdmin {
    rewrite ^/* /phpmyadmin last;
  }
  # End PHPMyAdmin block

} # End of server block.
