# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user  nginx;
worker_processes  4;

error_log  /var/log/nginx/error.log;
#error_log  /var/log/nginx/error.log  notice;
#error_log  /var/log/nginx/error.log  info;

pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  120;

    gzip  on;
        gzip_static       on;
        gzip_buffers      16 8k;
        gzip_comp_level   9;
        gzip_http_version 1.1;
        gzip_min_length   1400;
        gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;
        gzip_proxied
        expired
        no-cache
        no-store
        private
        auth;
        gzip_vary       on;
        proxy_cache_path /var/www/nginx_cache levels=1:2
                     keys_zone=one:10m;
    proxy_temp_path /var/www/nginx_temp;
    server {
        listen       80;
        server_name  localhost;
	 
        root   /volume/portais/carro_uni/PUBLIC;
        index index.php;
        set $no_cache 0;
        set $lngCookie "pt_en";
        if ($http_cookie ~* "socialengine_logged_in") {
            set $no_cache 1;
	 }

         if ($http_cookie ~* "en4_language=pt_BR"){
            set $lngCookie "pt_br";
         }
        

        #charset koi8-r;

        #access_log  /var/log/nginx/host.access.log  main;

                #
        # Serve directly: *.js, *.css, *.rdf,, *.xml, *.ico, & etc
        #
        location ~* \.(js|css|rdf|xml|ico|txt|gif|jpg|png|jpeg)$ {
                root   /volume/portais/carro_uni/PUBLIC;
                expires     31d;
                add_header Pragma public;
                add_header Cache-Control "public, must-revalidate, proxy-revalidate";
                #access_log  /var/log/nginx/d-a.direct.log ;
        }

        location ~ css\.php$ {

            	  expires     31d;
            	  add_header Pragma public;
            	  add_header Cache-Control "public, must-revalidate, proxy-revalidate";
             	  proxy_pass         http://127.0.0.1:81;
            	  proxy_redirect     off;

                proxy_set_header   Host             $host;
                proxy_set_header   X-Real-IP        $remote_addr;
                proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;

                client_max_body_size       10m;
                client_body_buffer_size    128k;

            	  proxy_connect_timeout      600;
             	  proxy_send_timeout         600;
                proxy_read_timeout         600;
                proxy_buffer_size          128k;
                proxy_buffers              4 256k;
                proxy_busy_buffers_size    256k;
                proxy_temp_file_write_size 256k;
                proxy_cache one;
                proxy_cache_valid  200 302 304 10m;
                proxy_cache_valid  301 1h;
                proxy_cache_valid  any 10m;
       }

        #
        # Proxy all remaining content to Apache
        #
        location / {
   
		
              
            #add_header  Cache-Control no-cache;
            proxy_ignore_headers Cache-Control Expires;
            proxy_pass         http://127.0.0.1:81/;
            proxy_redirect     off;

            proxy_set_header   Host             $host;
            proxy_set_header   X-Real-IP        $remote_addr;
            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;

            client_max_body_size       10m;
            client_body_buffer_size    128k;

            proxy_connect_timeout      90;
            proxy_send_timeout         90;
            proxy_read_timeout         300;

            proxy_buffer_size          128k;
            proxy_buffers              4 256k;
            proxy_busy_buffers_size    256k;
            proxy_temp_file_write_size 256k;
            proxy_cache_bypass $no_cache;
	     proxy_no_cache $no_cache;
            proxy_cache one;
            proxy_cache_key "$host$request_uri$lngCookie";
                proxy_cache_valid  200 302 304 10m;
                proxy_cache_valid  301 1h;
                proxy_cache_valid  any 10m;
        }
    }



#  server {
    #  listen       80;
     #   server_name  localhost;

        #charset koi8-r;

        #access_log  /var/log/nginx/host.access.log  main;

      #  location / {
      #     root   /usr/share/nginx/html;
      #      index  index.html index.htm;
      #  }

        # redirect server error pages to the static page /40x.html
        #
       # error_page  404              /404.html;
       # location = /40x.html {
        #    root   /usr/share/nginx/html;
       # }

        # redirect server error pages to the static page /50x.html
        #
        #error_page   500 502 503 504  /50x.html;
        #location = /50x.html {
         #   root   /usr/share/nginx/html;
        #}

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
  #  }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

    # Load config files from the /etc/nginx/conf.d directory
    include /etc/nginx/conf.d/*.conf;

}
